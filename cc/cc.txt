123



param = {'Coordinates': result_file_identify['parameters']['Coordinates'],
                'Decimal_numbers': result_file_identify['parameters']['Decimal_numbers'],
                'Number_format_decimal': result_file_identify['parameters']['Number_format_decimal'],
                'Number_format_integer': result_file_identify['parameters']['Number_format_integer'],
                'data_type': result_file_identify['parameters']['data_type'],
                'file_size': result_file_identify['parameters']['file_size'],
                'format': result_file_identify['parameters']['format'],
                'max_numbers': result_file_identify['parameters']['max_numbers'],
                'min_numbers': result_file_identify['parameters']['min_numbers'],
                'offset_numbers': result_file_identify['parameters']['offset_numbers'],
                'separator_char': result_file_identify['parameters']['separator_char'],
                'text_line_width': result_file_identify['parameters']['text_line_width'],
                'tool_units': result_file_identify['parameters']['tool_units'],
                'units': result_file_identify['parameters']['units'],
                'zeroes_omitted':result_file_identify['parameters']['zeroes_omitted']
                }


{'format': 'Gerber274x', 'name': 'Znn-2786693_st.gbr', 'parameters': {'Coordinates': 'Incremental', 'Decimal_numbers': True, 'Number_format_decimal': 3, 'Number_format_integer': 3, 'data_type': 'Ascii', 'fi
le_size': 60795.0, 'format': 'Gerber274x', 'max_numbers': {'first': 348000016.5291131, 'second': 331328015.7372355}, 'min_numbers': {'first': 0.0, 'second': 0.0}, 'offset_numbers': {'first': 0.0, 'second':
0.0}, 'separator_char': '*', 'text_line_width': 0.0, 'tool_units': ' ', 'units': 'MM', 'zeroes_omitted': 'Leading'}}





# 先看一下-com层是不是空的，如果是空的说明比对操作失败。
'COM info, out_file={}/{}_com_features_count.txt,args=  -t layer -e {}/{}/{} -m display -d FEATURES\nsource {}/{}_com_features_count.txt'.format(
                result_path_remote,self.layer1,self.job1,self.step1,self.layer1+'-com',result_path_remote,self.layer1
            ),

# 先看一下-com层是不是空的，如果是空的说明比对操作失败。
        with open(os.path.join(result_path_local,self.layer1 + '_com_features_count.txt'), 'r') as f:
            layer_com_count = len(f.readlines())
        if layer_com_count < 2:
            print("比对异常！未能比对！")
            result = '错误'
            return result



 # each_dict_para['zeroes'] = layer_e2.zeroes_omitted.values[0].lower()
                # each_dict_para['nf1'] = int(layer_e2.number_format_A.values[0])
                # each_dict_para['nf2'] = int(layer_e2.number_format_B.values[0])
                # each_dict_para['units'] = layer_e2.units.values[0].lower()
                # # g软件的tool_units没有mils选项
                # if layer_e2.tool_units_g.values[0].lower() == 'mils':
                #     each_dict_para['tool_units'] = 'inch'
                # else:
                #     each_dict_para['tool_units'] = layer_e2.tool_units_g.values[0].lower()


# ----------------------------------------开始用EP软件比图，g和g2--------------------------------------------------
        # all_result_ep_vs_g_g2 = {}
        # # 打开job_g
        # # 前面打开过的。直接show下看看
        # # GUI.show_layer(job_g, 'orig', 'top')
        #
        # # 打开 job_g2
        # #先解压tgz
        # CompressTool.untgz(os.path.join(temp_g2_path, os.listdir(temp_g2_path)[0]),temp_g2_path)
        # Input.open_job(job_g2, temp_g2_path)
        # # GUI.show_layer(job_g2, 'orig', 'top')
        #
        # # 开始用kernel比对
        # for each_layer_g in all_layers_list_job_g:
        #     print('EP VS'.center(192,'-'))
        #     print('层名称：',each_layer_g)
        #     ep_layer_compare_result = BASE.layer_compare_point(job_g, 'orig', each_layer_g, job_g2, 'orig', each_layer_g, 22860,True, True, 5080000)
        #     ep_layer_compare_result = json.loads(ep_layer_compare_result)
        #     print(ep_layer_compare_result)
        #     print(len(ep_layer_compare_result['result']))
        #     if len(ep_layer_compare_result['result']) > 0:
        #         all_result_ep_vs_g_g2[each_layer_g] = '错误'
        #         print('错误！')
        #         # Layers.layer_compare(job_g, 'orig', each_layer_g, job_g2, 'orig', each_layer_g, 22860,True, True, each_layer_g + '-com', 5080000)
        #         # GUI.show_layer(job_g, 'orig', each_layer_g)
        #     if len(ep_layer_compare_result['result']) == 0:
        #         all_result_ep_vs_g_g2[each_layer_g] = '正常'
        #         print('正常！')
        #
        # assert len(all_result_ep_vs_g_g2) == len(all_layers_list_job_g)



